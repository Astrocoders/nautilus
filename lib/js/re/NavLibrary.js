// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var View$BsReactNative = require("bs-react-native/lib/js/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/lib/js/src/style.js");

var component = ReasonReact.statelessComponent("NavSceneView");

function make(children) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function () {
      return ReasonReact.element(/* None */0, /* None */0, View$BsReactNative.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[Style$BsReactNative.style(/* :: */[
                              Style$BsReactNative.position(/* Absolute */0),
                              /* :: */[
                                Style$BsReactNative.top(/* Pt */Block.__(0, [0.0])),
                                /* :: */[
                                  Style$BsReactNative.left(/* Pt */Block.__(0, [0.0])),
                                  /* :: */[
                                    Style$BsReactNative.right(/* Pt */Block.__(0, [0.0])),
                                    /* :: */[
                                      Style$BsReactNative.bottom(/* Pt */Block.__(0, [0.0])),
                                      /* :: */[
                                        Style$BsReactNative.backgroundColor("#ffffff"),
                                        /* [] */0
                                      ]
                                    ]
                                  ]
                                ]
                              ]
                            ])], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[children]));
    });
  return newrecord;
}

var SceneView = /* module */[
  /* component */component,
  /* make */make
];

function CreateNavigation() {
  var component = ReasonReact.reducerComponent("CallstackStackNavigator");
  var make$1 = function (initialRoute, children) {
    var newrecord = component.slice();
    newrecord[/* render */9] = (function (self) {
        var navigation = /* record */[/* send */self[/* send */4]];
        return $$Array.of_list(List.rev_map((function (screen) {
                          return ReasonReact.element(/* Some */[Pervasives.string_of_int(screen[/* key */1])], /* None */0, make(Curry._2(children, screen[/* route */0], navigation)));
                        }), self[/* state */2][/* screens */0]));
      });
    newrecord[/* initialState */10] = (function () {
        return /* record */[/* screens : :: */[
                  /* record */[
                    /* route */initialRoute,
                    /* key */0
                  ],
                  /* [] */0
                ]];
      });
    newrecord[/* reducer */12] = (function (action, state) {
        if (action) {
          var screen_000 = /* route */action[0];
          var screen_001 = /* key */List.length(state[/* screens */0]);
          var screen = /* record */[
            screen_000,
            screen_001
          ];
          return /* Update */Block.__(0, [/* record */[/* screens : :: */[
                        screen,
                        state[/* screens */0]
                      ]]]);
        } else {
          var match = +(List.length(state[/* screens */0]) > 1);
          if (match !== 0) {
            return /* Update */Block.__(0, [/* record */[/* screens */List.tl(state[/* screens */0])]]);
          } else {
            return /* NoUpdate */0;
          }
        }
      });
    return newrecord;
  };
  var StackNavigator = /* module */[
    /* component */component,
    /* make */make$1
  ];
  return /* module */[/* StackNavigator */StackNavigator];
}

exports.SceneView = SceneView;
exports.CreateNavigation = CreateNavigation;
/* component Not a pure module */
